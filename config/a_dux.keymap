/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define def 0
#define cod 1
#define low 2
#define nav 3
#define rse 4
#define non 5


#define cterm 50

// &kscan0 {
//     debounce-period = <32>;
// };

&lt {
    flavor = "balanced";
    tapping-term-ms = <105>;
};

/ {
        // behaviors {
        //     hm_l: left_hand_positional_hold_tap {
        //         compatible = "zmk,behavior-hold-tap";
        //         label = "LEFT_POSITIONAL_HOLD_TAP";
        //         #binding-cells = <2>;
        //         flavor = "balanced";
        //         tapping-term-ms = <105>;
        //         bindings = <&kp>, <&kp>;
        //         quick-tap-ms = <200>;
        //         hold-trigger-key-positions = <6 7 8 9 15 16 17 18 19 25 26 27 28 30 31 32 33>;
        //     };
        //     hm_r: right_hand_positional_hold_tap {
        //         compatible = "zmk,behavior-hold-tap";
        //         label = "RIGHT_POSITIONAL_HOLD_TAP";
        //         #binding-cells = <2>;
        //         flavor = "balanced";
        //         tapping-term-ms = <105>;
        //         bindings = <&kp>, <&kp>;
        //         quick-tap-ms = <200>;
        //         hold-trigger-key-positions = <0 1 2 3 10 11 12 13 14 21 22 23 24 30 31 32 33>;
        //     };
        // };

        combos {
            compatible = "zmk,combos";
            combo_lcmd {
                timeout-ms = <cterm>;
                key-positions = <3 13>;
                bindings = <&kp LGUI>;
                layers = <0 1>;
            };
            combo_lalt {
                timeout-ms = <cterm>;
                key-positions = <1 11>;
                bindings = <&kp LALT>;
                layers = <0 1>;
            };
            combo_lsft {
                timeout-ms = <cterm>;
                key-positions = <2 12>;
                bindings = <&kp LSHFT>;
                layers = <0 1>;
            };
            combo_lctl {
                timeout-ms = <cterm>;
                key-positions = <0 10>;
                bindings = <&kp LCTRL>;
                layers = <0 1>;
            };
            combo_rcmd {
                timeout-ms = <cterm>;
                key-positions = <6 16>;
                bindings = <&kp RGUI>;
                layers = <0 1>;
            };
            combo_ralt {
                timeout-ms = <cterm>;
                key-positions = <8 18>;
                bindings = <&kp RALT>;
                layers = <0 1>;
            };
            combo_rsft {
                timeout-ms = <cterm>;
                key-positions = <7 17>;
                bindings = <&kp RSHFT>;
                layers = <0 1>;
            };
            combo_rctl {
                timeout-ms = <cterm>;
                key-positions = <9 19>;
                bindings = <&kp RCTRL>;
                layers = <0 1>;
            };
            combo_low {
                timeout-ms = <cterm>;
                key-positions = <30 31>;
                bindings = <&mo low>;
                layers = <0 1>;
            };
            combo_rse {
                timeout-ms = <cterm>;
                key-positions = <32 33>;
                bindings = <&mo rse>;
                layers = <0 1>;
            };
            exit_pause {
                timeout-ms = <cterm>;
                key-positions = <11 12 13 16 17 18>;
                bindings = <&to def>;
                layers = <5>;
            };
        };

	    keymap {
                compatible = "zmk,keymap";


                def {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤  F  ├─────┬─────┐                  ┌─────┬─────┤  U  ├─────┐
//       │  W  ├─────┤  P  │  B  │                  │  J  │  L  ├─────┤  Y  │
// ┌─────┼─────┤  S  ├─────┼─────┤                  ├─────┼─────┤  E  ├─────┼─────┐
// │  Q  │  R  ├─SFT─┤  T  │  G  │                  │  M  │  N  ├─SFT─┤  I  │  ;  │
// ├─────┼─ALT─┤  C  ├─GUI─┼─────┤                  ├─────┼─GUI─┤  ,  ├─ALT─┼─────┤
// │  A  │  X  ├─────┤  D  │  V  │                  │  K  │  H  ├─────┤  .  │  O  │
// ├─CTL─┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─CTL─┤
// │  Z  │                 ┌─────┬─────┐      ┌─────┬─────┐                 │  /  │
// └─────┘                 │ TAB │ SPC │      │ DEL │ ENT │                 └─────┘
//                         └ cod ┴ low ┘      └─rse─┴ nav ┘

                        bindings = <
    &kp Q       &kp W       &kp F       &kp P       &kp B
        &kp J        &kp L       &kp U       &kp Y       &kp SEMI

    &kp A     &kp R      &kp S     &kp T     &kp G
        &kp M     &kp N      &kp E     &kp I      &kp O

    &kp Z      &kp X       &kp C       &kp D       &kp V
        &kp K       &kp H       &kp COMMA       &kp DOT       &kp SLASH

    &lt cod TAB       &kp SPACE
        &kp BSPC      &lt nav ENTER
                        >;
                };


                cod {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤     ├─────┬─────┐                  ┌─────┬─────┤  _  ├─────┐
//       │     ├─────┤  {  │     │                  │     │  }  ├─────┤     │
// ┌─────┼─────┤  \  ├─────┼─────┤                  ├─────┼─────┤  *  ├─────┼─────┐
// │     │  =  ├─────┤  (  │  +  │                  │  -  │  )  ├─────┤  '  │     │
// ├─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┤
// │  `  │     ├─────┤  [  │     │                  │     │  ]  ├─────┤     │  "  │
// ├─────┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─────┤
// │     │                 ┌─────┬─────┐      ┌─────┬─────┐                 │     │
// └─────┘                 │     │     │      │     │     │                 └─────┘
//                         └─────┴─────┘      └─────┴─────┘

                        bindings = <
    &trans     &trans       &trans      &kp LBRC      &trans
        &trans      &kp RBRC      &kp UNDERSCORE      &trans      &trans

    &kp GRAVE     &kp EQUAL      &kp BSLH     &kp LPAR     &kp PLUS
        &kp MINUS     &kp RPAR      &kp STAR     &kp APOS       &kp DQT

    &trans       &trans      &trans      &kp LBKT       &trans
        &trans       &kp RBKT       &trans       &trans       &trans

    &trans      &trans
        &trans      &trans
                        >;
                };


                low {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤  F3 ├─────┬─────┐                  ┌─────┬─────┤  F8 ├─────┐
//       │  F2 ├─────┤ F4  │ F5  │                  │ F6  │ F7  ├─────┤ F9  │
// ┌─────┼─────┤ SFT ├─────┼─────┤                  ├─────┼─────┤ SFT ├─────┼─────┐
// │  F1 │ ALT ├─────┤ GUI │ F11 │                  │ F12 │ GUI ├─────┤ ALT │ F10 │
// ├─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┤
// │ CTL │     ├─────┤     │     │                  │     │     ├─────┤     │ CTL │
// ├─────┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─────┤
// │     │                 ┌─────┬─────┐      ┌─────┬─────┐                 │     │
// └─────┘                 │     │     │      │     │     │                 └─────┘
//                         └─────┴─────┘      └─────┴─────┘

                        bindings = <
    &kp F1     &kp F2      &kp F3      &kp F4       &kp F5
        &kp F6       &kp F7      &kp F8      &kp F9       &kp F10

    &kp LCTRL      &kp LALT     &kp LSHIFT      &kp LGUI       &kp F11
        &kp F12     &kp RGUI        &kp RSHFT        &kp RALT        &kp RCTRL

    &trans      &trans      &trans      &trans       &trans
        &trans     &trans       &trans      &trans      &trans

    &trans     &trans
        &trans      &trans
                        >;
                };


                nav {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤  ↑  ├─────┬─────┐                  ┌─────┬─────┤     ├─────┐
//       │     ├─────┤     │ BRIU│                  │ VOLU│ PLAY├─────┤     │
// ┌─────┼─────┤  ↓  ├─────┼─────┤                  ├─────┼─────┤ SFT ├─────┼─────┐
// │ ESC │  ←  ├─────┤  →  │ BRID│                  │ VOLD│ GUI ├─────┤ ALT │     │
// ├─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┤
// │ BT2 │     ├─────┤     │     │                  │     │     ├─────┤     │ CTL │
// ├─────┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─────┤
// │ BT1 │                 ┌─────┬─────┐      ┌─────┬─────┐                 │ HOL │
// └─────┘                 │     │     │      │     │     │                 └─────┘
//                         └─────┴─────┘      └─────┴─────┘

                        bindings = <
    &kp ESC       &trans      &kp UP      &trans       &kp C_BRI_UP
        &kp C_VOL_UP        &kp C_PLAY_PAUSE     &trans      &trans      &trans

    &bt BT_SEL 1    &kp LEFT       &kp DOWN     &kp RIGHT     &kp C_BRI_DN
        &kp C_VOL_DN     &kp LGUI      &kp LSHFT      &kp LALT     &kp LCTRL

    &bt BT_SEL 0       &trans      &trans     &trans       &trans
        &trans       &trans       &trans        &trans       &to 5

    &trans      &trans
        &trans      &trans
                        >;
                };


                rse {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤  3  ├─────┬─────┐                  ┌─────┬─────┤  8  ├─────┐
//       │  2  ├─────┤  4  │  5  │                  │  6  │  7  ├─────┤  9  │
// ┌─────┼─────┤ SFT ├─────┼─────┤                  ├─────┼─────┤ SFT ├─────┼─────┐
// │  1  │ ALT ├─────┤ GUI │     │                  │     │ GUI ├─────┤ ALT │  0  │
// ├─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┤
// │ CTL │     ├─────┤     │     │                  │     │     ├─────┤     │ CTL │
// ├─────┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─────┤
// │     │                 ┌─────┬─────┐      ┌─────┬─────┐                 │     │
// └─────┘                 │     │     │      │     │     │                 └─────┘
//                         └─────┴─────┘      └─────┴─────┘

                        bindings = <
    &kp N1        &kp N2      &kp N3      &kp N4       &kp N5
        &kp N6       &kp N7      &kp N8      &kp N9       &kp N0

    &kp LCTRL        &kp LALT      &kp LSHFT      &kp LGUI       &trans
        &trans      &kp RGUI       &kp RSHFT        &kp RALT        &kp RCTRL

    &trans        &trans      &trans      &trans       &trans
        &trans       &trans      &trans      &trans       &trans

    &trans      &trans
        &trans      &trans
                        >;
                };


        non {
//             ┌─────┐                                          ┌─────┐
//       ┌─────┤     ├─────┬─────┐                  ┌─────┬─────┤     ├─────┐
//       │     ├─────┤     │     │                  │     │     ├─────┤     │
// ┌─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┐
// │     │     ├─────┤     │     │                  │     │     ├─────┤     │     │
// ├─────┼─────┤     ├─────┼─────┤                  ├─────┼─────┤     ├─────┼─────┤
// │     │     ├─────┤     │     │                  │     │     ├─────┤     │     │
// ├─────┼─────┘     └─────┴─────┘                  └─────┴─────┘     └─────┼─────┤
// │     │                 ┌─────┬─────┐      ┌─────┬─────┐                 │     │
// └─────┘                 │     │     │      │     │     │                 └─────┘
//                         └─────┴─────┘      └─────┴─────┘

                        bindings = <
    &none    &none      &none      &none       &none
        &none       &none      &none      &none       &none

    &none        &none      &none      &none       &none
        &none      &none       &none        &none        &none

    &none        &none      &none      &none       &none
        &none       &none      &none      &none       &none

    &none      &none
        &none      &none
                        >;
                };


	    };
};